// <auto-generated />
using System;
using KontinentService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KontinentService.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20190621082443_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KontinentService.Models.CabinsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<int>("Price");

                    b.Property<string>("ShipName");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("KontinentService.Models.CabinValuesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CabinId");

                    b.Property<int>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("CabinId");

                    b.HasIndex("TourId");

                    b.ToTable("CabinValues");
                });

            modelBuilder.Entity("KontinentService.Models.CategoriesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Title");

                    b.Property<string>("UrlRus");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KontinentService.Models.FeedbackMessagesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppealPage");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<bool>("IsAnswered");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("QuestionText");

                    b.Property<string>("SecondName");

                    b.HasKey("Id");

                    b.ToTable("FeedbackMessages");
                });

            modelBuilder.Entity("KontinentService.Models.FilterAllowablesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FilterId");

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("FilterId");

                    b.ToTable("FilterAllowables");
                });

            modelBuilder.Entity("KontinentService.Models.FiltersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<bool>("IsBustour");

                    b.Property<bool>("IsCruise");

                    b.Property<bool>("IsSpecial");

                    b.Property<bool>("IsTour");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("KontinentService.Models.FilterValuesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FilterAllowableId");

                    b.Property<int?>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("FilterAllowableId");

                    b.HasIndex("TourId");

                    b.ToTable("FilterValues");
                });

            modelBuilder.Entity("KontinentService.Models.ImagesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.Property<int>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("KontinentService.Models.OrdersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateAdd");

                    b.Property<string>("Email");

                    b.Property<bool>("IsAnswered");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("QuestionText");

                    b.Property<string>("SecondName");

                    b.Property<int>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KontinentService.Models.PropertiesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("KontinentService.Models.PropertyValuesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PropertyId");

                    b.Property<int?>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("TourId");

                    b.ToTable("PropertyValues");
                });

            modelBuilder.Entity("KontinentService.Models.ReviewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("Rating");

                    b.Property<string>("SecondName");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("KontinentService.Models.SchedulesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text");

                    b.Property<int>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("KontinentService.Models.ScheduleValuesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Day");

                    b.Property<string>("Place");

                    b.Property<int>("ScheduleId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleValues");
                });

            modelBuilder.Entity("KontinentService.Models.SubcategoriesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Title");

                    b.Property<string>("UrlRus");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("KontinentService.Models.ToursModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateIn");

                    b.Property<DateTime>("DateOut");

                    b.Property<string>("Description");

                    b.Property<int>("Discount");

                    b.Property<string>("Image");

                    b.Property<int>("IndexOnPage");

                    b.Property<bool>("IsBustour");

                    b.Property<bool>("IsCruise");

                    b.Property<bool>("IsHot");

                    b.Property<bool>("IsTour");

                    b.Property<int>("NumberOfOrders");

                    b.Property<int>("Price");

                    b.Property<string>("Route");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("SpecialDescription");

                    b.Property<int>("SubcategoryId");

                    b.Property<string>("Title");

                    b.Property<string>("UrlRus");

                    b.HasKey("Id");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("KontinentService.Models.UsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsBlocked");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.Property<DateTime>("RegDate");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KontinentService.Models.CabinValuesModel", b =>
                {
                    b.HasOne("KontinentService.Models.CabinsModel", "Cabin")
                        .WithMany()
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KontinentService.Models.ToursModel", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.FilterAllowablesModel", b =>
                {
                    b.HasOne("KontinentService.Models.FiltersModel", "Filter")
                        .WithMany()
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.FiltersModel", b =>
                {
                    b.HasOne("KontinentService.Models.CategoriesModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.FilterValuesModel", b =>
                {
                    b.HasOne("KontinentService.Models.FilterAllowablesModel", "FilterAllowable")
                        .WithMany()
                        .HasForeignKey("FilterAllowableId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KontinentService.Models.ToursModel", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId");
                });

            modelBuilder.Entity("KontinentService.Models.ImagesModel", b =>
                {
                    b.HasOne("KontinentService.Models.ToursModel", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.OrdersModel", b =>
                {
                    b.HasOne("KontinentService.Models.ToursModel", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.PropertiesModel", b =>
                {
                    b.HasOne("KontinentService.Models.CategoriesModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.PropertyValuesModel", b =>
                {
                    b.HasOne("KontinentService.Models.PropertiesModel", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KontinentService.Models.ToursModel", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId");
                });

            modelBuilder.Entity("KontinentService.Models.SchedulesModel", b =>
                {
                    b.HasOne("KontinentService.Models.ToursModel", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.ScheduleValuesModel", b =>
                {
                    b.HasOne("KontinentService.Models.SchedulesModel", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.SubcategoriesModel", b =>
                {
                    b.HasOne("KontinentService.Models.CategoriesModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KontinentService.Models.ToursModel", b =>
                {
                    b.HasOne("KontinentService.Models.SubcategoriesModel", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
